rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSignedIn() {
      return request.auth != null;
    }

    match /users/{userId} {
      allow create: if isSignedIn() && request.auth.uid == userId;

      allow read: if isSignedIn() && 
                    (request.auth.uid == userId ||
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) && (
                       userId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.friends ||
                       userId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.friendRequestsReceived
                     ) ||
                     // Allow reading any public profile data that isn't sensitive
                     !('email' in resource.data) && 
                     !('fcmTokens' in resource.data) &&
                     !('friendRequestsReceived' in resource.data) &&
                     !('friendRequestsSent' in resource.data)
                    );
      
      allow update: if isSignedIn() && request.auth.uid == userId;

      allow delete: if isSignedIn() && request.auth.uid == userId;
    }

    match /chats/{chatId} {
      // Chat ID must be a combination of two user IDs, sorted alphabetically
      function isValidChatId() {
        let userIds = chatId.split('_');
        return userIds.length == 2 && userIds[0] < userIds[1];
      }
      
      function isChatMember() {
        return request.auth.uid in chatId.split('_');
      }

      allow read, write: if isSignedIn() && isChatMember() && isValidChatId();

      match /messages/{messageId} {
        allow read: if isChatMember();
        
        allow create: if isChatMember() && request.resource.data.senderId == request.auth.uid;
        
        allow update, delete: if false; // Messages are immutable
      }
    }

    match /pings/{pingId} {
      allow create: if isSignedIn();
      allow read, update, delete: if false; // Pings are write-only events
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
